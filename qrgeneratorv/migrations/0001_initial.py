# Generated by Django 4.0.6 on 2022-08-09 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.CharField(max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=100, verbose_name='Автор')),
                ('description', models.TextField(verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaChannels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Название', max_length=100, verbose_name='Название')),
                ('url', models.URLField(verbose_name='Ссылка')),
                ('text', models.TextField(verbose_name='Текст')),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название тарифа')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('expires_in', models.DurationField(blank=True, null=True, verbose_name='Истекает')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qrname', models.CharField(max_length=100, verbose_name='Название')),
                ('color_primary', models.CharField(blank=True, max_length=7, null=True, verbose_name='Основной цвет')),
                ('color_button', models.CharField(blank=True, max_length=7, null=True, verbose_name='Цвет кнопки')),
                ('image', models.ImageField(blank=True, null=True, upload_to='templates', verbose_name='Изображение')),
                ('headline', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок')),
                ('about_us', models.TextField(blank=True, max_length=100, null=True, verbose_name='О нас')),
                ('social_media_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип медиа1')),
                ('title1', models.CharField(blank=True, default='Название', max_length=100, null=True, verbose_name='Название')),
                ('url1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка')),
                ('social_media_type1_url_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='Тип медиа1 Enter Counts')),
                ('social_media_type2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип медиа2')),
                ('title2', models.CharField(blank=True, default='Название', max_length=100, null=True, verbose_name='Название')),
                ('url2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка')),
                ('social_media_type2_url_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='Тип медиа2 Enter Counts')),
                ('social_media_type3', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип медиа3')),
                ('title3', models.CharField(blank=True, default='Название', max_length=100, null=True, verbose_name='Название')),
                ('url3', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка')),
                ('social_media_type3_url_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='Тип медиа3 Enter Counts')),
                ('scale', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], default=5, max_length=2)),
                ('color', models.CharField(choices=[('black', 'siyah'), ('red', 'kırmızı'), ('blue', 'mavi'), ('green', 'yeşil'), ('brown', 'kahverengi'), ('purple', 'mor'), ('pink', 'pembe'), ('yellow', 'sarı'), ('grey', 'gri'), ('light_blue', 'açık mavi')], default='black', max_length=15)),
                ('device', models.CharField(blank=True, choices=[('mobile', 'mobile'), ('tablet', 'tablet'), ('touch_capable', 'touch_capable'), ('pc', 'pc'), ('bot', 'bot'), ('other', 'other')], default='other', max_length=64, null=True, verbose_name='Тип устройства')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Шаблон',
                'verbose_name_plural': 'Шаблоны',
            },
        ),
        migrations.CreateModel(
            name='QrCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название QR кода')),
                ('url', models.CharField(blank=True, max_length=100, null=True, verbose_name='URL')),
                ('image', models.FileField(blank=True, null=True, upload_to='qrcode')),
                ('expires_in', models.DateTimeField(blank=True, null=True, verbose_name='Истекает')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='Scaner Counts')),
                ('scale', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], default=5, max_length=2)),
                ('color', models.CharField(choices=[('black', 'siyah'), ('red', 'kırmızı'), ('blue', 'mavi'), ('green', 'yeşil'), ('brown', 'kahverengi'), ('purple', 'mor'), ('pink', 'pembe'), ('yellow', 'sarı'), ('grey', 'gri'), ('light_blue', 'açık mavi')], default='black', max_length=15)),
                ('device', models.CharField(blank=True, choices=[('mobile', 'mobile'), ('tablet', 'tablet'), ('touch_capable', 'touch_capable'), ('pc', 'pc'), ('bot', 'bot'), ('other', 'other')], default='other', max_length=64, null=True)),
                ('android', models.IntegerField(blank=True, default=0, null=True, verbose_name='Android')),
                ('ios', models.IntegerField(blank=True, default=0, null=True, verbose_name='iOS')),
                ('os', models.IntegerField(blank=True, default=0, null=True, verbose_name='OS')),
                ('mobile', models.IntegerField(blank=True, default=0, null=True, verbose_name='Mobile')),
                ('other_devices', models.IntegerField(blank=True, default=0, null=True, verbose_name='Other Devices')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qrcodes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForFakeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип медиа')),
                ('url', models.CharField(max_length=100, verbose_name='Ссылка')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_template', to='qrgeneratorv.template')),
            ],
            options={
                'verbose_name': 'Ссылка для шаблона',
                'verbose_name_plural': 'Ссылки для шаблона',
            },
        ),
    ]
